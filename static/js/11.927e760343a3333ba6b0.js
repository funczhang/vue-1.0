webpackJsonp([11],{122:function(s,a,t){var n=t(20)(null,t(137),null,null);s.exports=n.exports},137:function(s,a){s.exports={render:function(){var s=this,a=s.$createElement;s._self._c;return s._m(0)},staticRenderFns:[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("section",[t("div",{staticStyle:{margin:"3rem auto",width:"50%"}},[t("img",{staticStyle:{width:"10rem",display:"block",margin:"6rem auto 3rem",padding:"2rem 0"},attrs:{src:"http://static.styzy.cn/vueStandard/img/node.svg",title:"Vue.js"}})]),s._v(" "),t("h2",[s._v("NodeJS")]),s._v(" "),t("h3",[s._v("1.简介")]),s._v(" "),t("p",[s._v("  Node是JavaScript语言的服务器运行环境。")]),s._v(" "),t("p",[s._v("  所谓“运行环境”有两层意思：首先，JavaScript语言通过Node在服务器运行，在这个意义上，Node有点像JavaScript虚拟机；其次，Node提供大量工具库，使得JavaScript语言与操作系统互动（比如读写文件、新建子进程），在这个意义上，Node又是JavaScript的工具库。")]),s._v(" "),t("p",[s._v("  Node内部采用Google公司的"),t("code",[s._v("V8")]),s._v("引擎，作为JavaScript语言解释器；通过自行开发的"),t("code",[s._v("libuv")]),s._v("库，调用操作系统资源。")]),s._v(" "),t("p",[s._v("  安装及更新："),t("a",{attrs:{href:"http://nodejs.org/"}},[s._v("NodeJS")])]),s._v(" "),t("p",[s._v("  Node采用V8引擎处理JavaScript脚本，最大特点就是单线程运行，一次只能运行一个任务。这导致Node大量采用异步操作（asynchronous opertion），即任务不是马上执行，而是插在任务队列的尾部，等到前面的任务运行完后再执行。")]),s._v(" "),t("p",[s._v("  由于这种特性，某一个任务的后续操作，往往采用回调函数（"),t("code",[s._v("callback")]),s._v("）的形式进行定义。")]),s._v(" "),t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" isTrue = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("value, callback")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (value === "),t("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(") {\n    callback("),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(", "),t("span",{staticClass:"hljs-string"},[s._v('"Value was true."')]),s._v(");\n  }\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n    callback("),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("Error")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v('"Value is not true!"')]),s._v("));\n  }\n}\n")])]),s._v(" "),t("p",[s._v("  上面代码就把进一步的处理，交给回调函数"),t("code",[s._v("callback")]),s._v("。")]),s._v(" "),t("p",[s._v("  Node约定，如果某个函数需要回调函数作为参数，则回调函数是最后一个参数。另外，回调函数本身的第一个参数，约定为上一步传入的错误对象。")]),s._v(" "),t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" callback = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("error, value")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (error) {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(error);\n  }\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(value);\n}\n")])]),s._v(" "),t("p",[s._v("  上面代码中，"),t("code",[s._v("callback")]),s._v("的第一个参数是"),t("code",[s._v("Error")]),s._v("对象，第二个参数才是真正的数据参数。这是因为回调函数主要用于异步操作，当回调函数运行时，前期的操作早结束了，错误的执行栈早就不存在了，传统的错误捕捉机制"),t("code",[s._v("try…catch")]),s._v("对于异步操作行不通，所以只能把错误交给回调函数处理。")]),s._v(" "),t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("try")]),s._v(" {\n  db.User.get(userId, "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("err, user")]),s._v(") ")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(err) {\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" err\n    }\n    "),t("span",{staticClass:"hljs-comment"},[s._v("// ...")]),s._v("\n  })\n} "),t("span",{staticClass:"hljs-keyword"},[s._v("catch")]),s._v("(e) {\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(‘Oh no!’);\n}\n")])]),s._v(" "),t("p",[s._v("  上面代码中，"),t("code",[s._v("db.User.get")]),s._v("方法是一个异步操作，等到抛出错误时，可能它所在的"),t("code",[s._v("try…catch")]),s._v("代码块早就运行结束了，这会导致错误无法被捕捉。所以，Node统一规定，一旦异步操作发生错误，就把错误对象传递到回调函数。")]),s._v(" "),t("p",[s._v("  如果没有发生错误，回调函数的第一个参数就传入"),t("code",[s._v("null")]),s._v("。这种写法有一个很大的好处，就是说只要判断回调函数的第一个参数，就知道有没有出错，如果不是"),t("code",[s._v("null")]),s._v("，就肯定出错了。另外，这样还可以层层传递错误。")]),s._v(" "),t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(err) {\n  "),t("span",{staticClass:"hljs-comment"},[s._v("// 除了放过No Permission错误意外，其他错误传给下一个回调函数")]),s._v("\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v("(!err.noPermission) {\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" next(err);\n  }\n}\n")])]),s._v(" "),t("h3",[s._v("2.模块化结构")]),s._v(" "),t("p",[s._v("  Node.js采用模块化结构，按照CommonJS规范定义和使用模块。模块与文件是一一对应关系，即加载一个模块，实际上就是加载对应的一个模块文件。")]),s._v(" "),t("h3",[s._v("3.异常处理")]),s._v(" "),t("h4",[s._v("try…catch结构")]),s._v(" "),t("p",[s._v("  最常用的捕获异常的方式，就是使用"),t("code",[s._v("try…catch")]),s._v("结构。但是，这个结构无法捕获异步运行的代码抛出的异常。")]),s._v(" "),t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("try")]),s._v(" {\n  process.nextTick("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("Error")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v('"error"')]),s._v(");\n  });\n} "),t("span",{staticClass:"hljs-keyword"},[s._v("catch")]),s._v(" (err) {\n  "),t("span",{staticClass:"hljs-comment"},[s._v("//can not catch it")]),s._v("\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(err);\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("try")]),s._v(" {\n  setTimeout("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(")")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("Error")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v('"error"')]),s._v(");\n  },"),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(")\n} "),t("span",{staticClass:"hljs-keyword"},[s._v("catch")]),s._v(" (err) {\n  "),t("span",{staticClass:"hljs-comment"},[s._v("//can not catch it")]),s._v("\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(err);\n}\n")])]),s._v(" "),t("p",[s._v("  上面代码分别用"),t("code",[s._v("process.nextTick")]),s._v("和"),t("code",[s._v("setTimeout")]),s._v("方法，在下一轮事件循环抛出两个异常，代表异步操作抛出的错误。它们都无法被"),t("code",[s._v("catch")]),s._v("代码块捕获，因为"),t("code",[s._v("catch")]),s._v("代码块所在的那部分已经运行结束了。")]),s._v(" "),t("h4",[s._v("回调函数")]),s._v(" "),t("p",[s._v("  Node采用的方法，是将错误对象作为第一个参数，传入回调函数。这样就避免了捕获代码与发生错误的代码不在同一个时间段的问题。")]),s._v(" "),t("pre",[t("code",{staticClass:"language-javascript"},[s._v("fs.readFile("),t("span",{staticClass:"hljs-string"},[s._v("'/foo.txt'")]),s._v(", "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("err, data")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (err !== "),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(") "),t("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" err;\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(data);\n});\n")])]),s._v(" "),t("p",[s._v("  上面代码表示，读取文件"),t("code",[s._v("foo.txt")]),s._v("是一个异步操作，它的回调函数有两个参数，第一个是错误对象，第二个是读取到的文件数据。如果第一个参数不是"),t("code",[s._v("null")]),s._v("，就意味着发生错误，后面代码也就不再执行了。")]),s._v(" "),t("p",[s._v("  下面是一个完整的例子。")]),s._v(" "),t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("async")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("continuation")]),s._v(") ")]),s._v("{\n  setTimeout("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("try")]),s._v(" {\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" res = "),t("span",{staticClass:"hljs-number"},[s._v("42")]),s._v(";\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" ("),t("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(")\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("Error")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v('"woops!"')]),s._v(");\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v("\n        continuation("),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(", res); "),t("span",{staticClass:"hljs-comment"},[s._v("// pass 'null' for error")]),s._v("\n    } "),t("span",{staticClass:"hljs-keyword"},[s._v("catch")]),s._v("(e) {\n      continuation(e, "),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(");\n    }\n  }, "),t("span",{staticClass:"hljs-number"},[s._v("2000")]),s._v(");\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("async")]),s._v("("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("err, res")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (err)\n    "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-string"},[s._v('"Error: (cps) failed:"')]),s._v(", err);\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v("\n    "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-string"},[s._v('"(cps) received:"')]),s._v(", res);\n});\n"),t("span",{staticClass:"hljs-comment"},[s._v("// Error: (cps) failed: woops!")]),s._v("\n")])]),s._v(" "),t("p",[s._v("  上面代码中，"),t("code",[s._v("async")]),s._v("函数的回调函数的第一个参数就是一个错误对象，这是为了处理异步操作抛出的错误。")]),s._v(" "),t("p",[t("em",[t("code",[s._v("EventEmitter")]),s._v("接口的"),t("code",[s._v("error")]),s._v("事件 "),t("code",[s._v("uncaughtException")]),s._v("事件 "),t("code",[s._v("unhandledRejection")]),s._v("事件")])]),s._v(" "),t("h3",[s._v("4.应用")]),s._v(" "),t("p",[s._v("  NodeJs的这些特性，可以让开发者快速在本地搭建一个高度集成化服务器。")]),s._v(" "),t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" PORT = "),t("span",{staticClass:"hljs-number"},[s._v("8080")]),s._v(";\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" proname="),t("span",{staticClass:"hljs-string"},[s._v('"test"')]),s._v("\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" http = "),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'http'")]),s._v(");\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" url="),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'url'")]),s._v(");\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" fs="),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'fs'")]),s._v(");\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" mine="),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./mine'")]),s._v(").types;"),t("span",{staticClass:"hljs-comment"},[s._v("//这里需要引入文件类型转译映射")]),s._v("\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" path="),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'path'")]),s._v(");\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" server = http.createServer("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("request, response")]),s._v(") ")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" pathname = url.parse(request.url).pathname;\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" realPath = path.join(proname, pathname);    "),t("span",{staticClass:"hljs-comment"},[s._v("//这里设置自己的文件名称;")]),s._v("\n\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" ext = path.extname(realPath);\n    ext = ext ? ext.slice("),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(") : "),t("span",{staticClass:"hljs-string"},[s._v("'unknown'")]),s._v(";\n    fs.exists(realPath, "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("exists")]),s._v(") ")]),s._v("{\n        "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (!exists) {\n            response.writeHead("),t("span",{staticClass:"hljs-number"},[s._v("404")]),s._v(", {\n                "),t("span",{staticClass:"hljs-string"},[s._v("'Content-Type'")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'text/plain'")]),s._v("\n            });\n\n            response.write("),t("span",{staticClass:"hljs-string"},[s._v('"This request URL "')]),s._v(" + pathname + "),t("span",{staticClass:"hljs-string"},[s._v('" was not found on this server."')]),s._v(");\n            response.end();\n        } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n            fs.readFile(realPath, "),t("span",{staticClass:"hljs-string"},[s._v('"binary"')]),s._v(", "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("err, file")]),s._v(") ")]),s._v("{\n                "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (err) {\n                    response.writeHead("),t("span",{staticClass:"hljs-number"},[s._v("500")]),s._v(", {\n                        "),t("span",{staticClass:"hljs-string"},[s._v("'Content-Type'")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'text/plain'")]),s._v("\n                    });\n                    response.end(err);\n                } "),t("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n                    "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" contentType = mine[ext] || "),t("span",{staticClass:"hljs-string"},[s._v('"text/plain"')]),s._v(";\n                    response.writeHead("),t("span",{staticClass:"hljs-number"},[s._v("200")]),s._v(", {\n                        "),t("span",{staticClass:"hljs-string"},[s._v("'Content-Type'")]),s._v(": contentType\n                    });\n                    response.write(file, "),t("span",{staticClass:"hljs-string"},[s._v('"binary"')]),s._v(");\n                    response.end();\n                }\n            });\n        }\n    });\n});\nserver.listen(PORT);\n"),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-string"},[s._v('"Server runing at port: "')]),s._v(" + PORT + "),t("span",{staticClass:"hljs-string"},[s._v('"."')]),s._v(");\n")])]),s._v(" "),t("p",[s._v("  上面代码中，通过对本地端口和系统资源的操作，可以让项目工程部署在一个以本机为平台的服务器上。如果在这基础之上加以扩充和完善，就可以把它部署在大型服务器上。目前，NodeJS正被广泛运用在现代化高并发服务器的开发之中。")])])}]}},74:function(s,a,t){s.exports=t(122)}});