webpackJsonp([14],{118:function(s,e,t){var _=t(20)(null,t(134),null,null);s.exports=_.exports},134:function(s,e){s.exports={render:function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("section",[t("h2",[s._v("CommonJs")]),s._v(" "),t("blockquote",[t("p",[s._v("CommonJS API定义很多普通应用程序（主要指非浏览器的应用）使用的API，从而填补了这个空白。它的终极目标是提供一个类似Python，Ruby和Java标准库。")])]),s._v(" "),t("h3",[s._v("1.简介")]),s._v(" "),s._m(0),s._v(" "),s._m(1),s._v(" "),s._m(2),s._v(" "),s._m(3),s._v(" "),s._m(4),s._v(" "),s._m(5),s._v(" "),t("p",[s._v("  所有代码都运行在模块作用域，不会污染全局作用域。模块可以多次加载，但是只会在第一次加载时运行一次，然后运行结果就被缓存了，以后再加载，就直接读取缓存结果。要想让模块再次运行，必须清除缓存。模块加载的顺序，按照其在代码中出现的顺序。")]),s._v(" "),t("br"),s._v(" "),t("h3",[s._v("2.module对象")]),s._v(" "),s._m(6),s._v(" "),s._m(7),s._v(" "),s._m(8),s._v(" "),s._m(9),s._v(" "),t("h4",[s._v("module.exports属性")]),s._v(" "),s._m(10),s._v(" "),s._m(11),s._v(" "),s._m(12),s._v(" "),s._m(13),s._v(" "),t("h3",[s._v("3.require命令")]),s._v(" "),s._m(14),s._v(" "),s._m(15),s._v(" "),s._m(16),s._v(" "),s._m(17),s._v(" "),s._m(18),s._v(" "),s._m(19),s._v(" "),s._m(20),s._v(" "),s._m(21),s._v(" "),s._m(22),s._v(" "),s._m(23),s._v(" "),s._m(24),s._v(" "),s._m(25),s._v(" "),s._m(26),s._v(" "),s._m(27)],1)},staticRenderFns:[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" x = "),t("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(";\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" addX = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("value")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" value + x;\n};\n")])])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  上面代码中，变量"),t("code",[s._v("x")]),s._v("和函数"),t("code",[s._v("addX")]),s._v("，是当前文件私有的，其他文件不可见。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  如果想在多个文件分享变量，必须定义为"),t("code",[s._v("global")]),s._v("对象的属性。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  CommonJS规范规定，每个模块内部，"),t("code",[s._v("module")]),s._v("变量代表当前模块。这个变量是一个对象，它的"),t("code",[s._v("exports")]),s._v("属性（即"),t("code",[s._v("module.exports")]),s._v("）是对外的接口。加载某个模块，其实是加载该模块的module.exports属性。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" x = "),t("span",{staticClass:"hljs-number"},[s._v("5")]),s._v(";\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" addX = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"},[s._v("value")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" value + x;\n};\n"),t("span",{staticClass:"hljs-built_in"},[s._v("module")]),s._v(".exports.x = x;\n"),t("span",{staticClass:"hljs-built_in"},[s._v("module")]),s._v(".exports.addX = addX;\n")])])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  上面代码通过"),t("code",[s._v("module.exports")]),s._v("输出变量"),t("code",[s._v("x")]),s._v("和函数"),t("code",[s._v("addX")]),s._v("。使用"),t("code",[s._v("require")]),s._v("方法用于加载模块。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  Node内部提供一个"),t("code",[s._v("Module")]),s._v("构建函数。所有模块都是"),t("code",[s._v("Module")]),s._v("的实例。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("Module")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("id, parent")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".id = id;\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".exports = {};\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".parent = parent;\n}\n")])])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  每个模块内部，都有一个"),t("code",[s._v("module")]),s._v("对象，代表当前模块。它有以下属性。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[t("code",[s._v("module.id")]),s._v(" 模块的识别符，通常是带有绝对路径的模块文件名。\n  "),t("code",[s._v("module.filename")]),s._v(" 模块的文件名，带有绝对路径。\n  "),t("code",[s._v("module.loaded")]),s._v(" 返回一个布尔值，表示模块是否已经完成加载。\n  "),t("code",[s._v("module.parent")]),s._v(" 返回一个对象，表示调用该模块的模块。\n  "),t("code",[s._v("module.children")]),s._v(" 返回一个数组，表示该模块要用到的其他模块。\n  "),t("code",[s._v("module.exports")]),s._v(" 表示模块对外输出的值。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[t("code",[s._v("module.exports")]),s._v("属性表示当前模块对外输出的接口，其他文件加载该模块，实际上就是读取"),t("code",[s._v("module.exports")]),s._v("变量。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" EventEmitter = "),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'events'")]),s._v(").EventEmitter;\n"),t("span",{staticClass:"hljs-built_in"},[s._v("module")]),s._v(".exports = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" EventEmitter();\nsetTimeout("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("module")]),s._v(".exports.emit("),t("span",{staticClass:"hljs-string"},[s._v("'ready'")]),s._v(");\n}, "),t("span",{staticClass:"hljs-number"},[s._v("1000")]),s._v(");\n")])])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  上面模块会在加载后1秒后，发出"),t("code",[s._v("ready")]),s._v("事件。其他文件监听该事件，可以写成下面这样。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" a = "),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./a'")]),s._v(");\na.on("),t("span",{staticClass:"hljs-string"},[s._v("'ready'")]),s._v(", "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-string"},[s._v("'module a is ready'")]),s._v(");\n});\n")])])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[t("code",[s._v("require")]),s._v("命令的基本功能是，读入并执行一个JavaScript文件，然后返回该模块的"),t("code",[s._v("exports")]),s._v("对象。如果没有发现指定模块，会报错。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  如果模块输出的是一个函数，那就不能定义在"),t("code",[s._v("exports")]),s._v("对象上面，而要定义在"),t("code",[s._v("module.exports")]),s._v("变量上面。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-built_in"},[s._v("module")]),s._v(".exports = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),t("span",{staticClass:"hljs-string"},[s._v('"hello world"')]),s._v(")\n}\n\n"),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./xxx.js'")]),s._v(")()\n")])])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  根据参数的不同格式，"),t("code",[s._v("require")]),s._v("命令去不同路径寻找模块文件。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  （1）如果参数字符串以“/”开头，则表示加载的是一个位于绝对路径的模块文件。比如，"),t("code",[s._v("require('/home/marco/foo.js')")]),s._v("将加载"),t("code",[s._v("/home/marco/foo.js")]),s._v("。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  （2）如果参数字符串以“./”开头，则表示加载的是一个位于相对路径（跟当前执行脚本的位置相比）的模块文件。比如，"),t("code",[s._v("require('./circle')")]),s._v("将加载当前脚本同一目录的"),t("code",[s._v("circle.js")]),s._v("。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  （3）如果参数字符串不以“./“或”/“开头，则表示加载的是一个默认提供的核心模块（位于Node的系统安装目录中），或者一个位于各级"),t("code",[s._v("node_modules")]),s._v("目录的已安装模块（全局安装或局部安装）。这样设计的目的是，使得不同的模块可以将所依赖的模块本地化。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  （4）如果参数字符串不以“./“或”/“开头，而且是一个路径，比如"),t("code",[s._v("require('example-module/path/to/file')")]),s._v("，则将先找到"),t("code",[s._v("example-module")]),s._v("的位置，然后再以它为参数，找到后续路径。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  （5）如果指定的模块文件没有发现，Node会尝试为文件名添加"),t("code",[s._v(".js")]),s._v("、"),t("code",[s._v(".json")]),s._v("、"),t("code",[s._v(".node")]),s._v("后，再去搜索。"),t("code",[s._v(".js")]),s._v("件会以文本格式的JavaScript脚本文件解析，"),t("code",[s._v(".json")]),s._v("文件会以JSON格式的文本文件解析，.node文件会以编译后的二进制文件解析。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  （6）如果想得到"),t("code",[s._v("require")]),s._v("命令加载的确切文件名，使用"),t("code",[s._v("require.resolve()")]),s._v("方法。第一次加载某个模块时，Node会缓存该模块。以后再加载该模块，就直接从缓存取出该模块的module.exports属性。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("pre",[t("code",{staticClass:"language-javascript"},[t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./xxx.js'")]),s._v(");\n"),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./xxx.js'")]),s._v(").message = "),t("span",{staticClass:"hljs-string"},[s._v('"hello"')]),s._v(";\n"),t("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),t("span",{staticClass:"hljs-string"},[s._v("'./xxx.js'")]),s._v(").message\n"),t("span",{staticClass:"hljs-comment"},[s._v('// "hello"')]),s._v("\n")])])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[s._v("  上面代码中，连续三次使用"),t("code",[s._v("require")]),s._v("命令，加载同一个模块。第二次加载的时候，为输出的对象添加了一个"),t("code",[s._v("message")]),s._v("属性。但是第三次加载的时候，这个"),t("code",[s._v("message")]),s._v("属性依然存在，这就证明require命令并没有重新加载模块文件，而是输出了缓存，这意味着模块实际上只会执行一次。如果希望模块执行多次，则可以让模块返回一个函数，然后多次调用该函数。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("p",[t("code",[s._v("require")]),s._v("命令是CommonJS规范之中，用来加载其他模块的命令。它其实不是一个全局命令，而是指向当前模块的"),t("code",[s._v("module.require")]),s._v("命令，而后者又调用Node的内部命令"),t("code",[s._v("Module.load")]),s._v("。")])},function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("pre",[t("code",{staticClass:"language-javascript"},[s._v("Module._load = "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("request, parent, isMain")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-comment"},[s._v("// 1. 检查 Module._cache，是否缓存之中有指定模块")]),s._v("\n  "),t("span",{staticClass:"hljs-comment"},[s._v("// 2. 如果缓存之中没有，就创建一个新的Module实例")]),s._v("\n  "),t("span",{staticClass:"hljs-comment"},[s._v("// 3. 将它保存到缓存")]),s._v("\n  "),t("span",{staticClass:"hljs-comment"},[s._v("// 4. 使用 module.load() 加载指定的模块文件，")]),s._v("\n  "),t("span",{staticClass:"hljs-comment"},[s._v("//    读取文件内容之后，使用 module.compile() 执行文件代码")]),s._v("\n  "),t("span",{staticClass:"hljs-comment"},[s._v("// 5. 如果加载/解析过程报错，就从缓存删除该模块")]),s._v("\n  "),t("span",{staticClass:"hljs-comment"},[s._v("// 6. 返回该模块的 module.exports")]),s._v("\n};\n")])])}]}},71:function(s,e,t){s.exports=t(118)}});